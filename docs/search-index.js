var searchIndex={};
searchIndex["raft"] = {"doc":"","i":[[0,"log","raft","",null,null],[3,"LogItem","raft::log","",null,null],[12,"term","","",0,null],[12,"command","","",0,null],[6,"LogIndex","","",null,null],[8,"Log","","",null,null],[16,"Command","","",1,null],[10,"truncate_if_different_and_append","","",1,[[["self"],["logindex"]],["logindex"]]],[10,"log_term_matches","","",1,[[["term"],["self"],["logindex"]],["bool"]]],[11,"new","","",0,[[["term"],["command"]],["self"]]],[0,"state","raft","",null,null],[3,"PersistentState","raft::state","Persistent state on all servers:(Updated on stable storage…",null,null],[3,"LeaderState","","",null,null],[3,"ServerState","","Volatile state on all servers",null,null],[4,"States","","Server states. Followers only respond to requestsfrom…",null,null],[13,"Follower","","",2,null],[13,"Candidate","","",2,null],[13,"Leader","","Volatile state on leaders:(Reinitialized after election)",2,null],[11,"receive_append_entries","","Invoked by leader to replicate log entries (§5.3); also…",3,[[["intoiterator"],["self"],["appendentriesrequest"]],["appendentriesresponse"]]],[0,"state_machine","raft","",null,null],[6,"StateMachineReceiver","raft::state_machine","",null,null],[0,"rpc","raft","Raft servers communicate using remote procedure…",null,null],[3,"AppendEntriesRequest","raft::rpc","Invoked by leader to replicate log entries (§5.3); also…",null,null],[12,"term","","leader’s term",4,null],[12,"leader_id","","so follower can redirect clients",4,null],[12,"prev_log_index","","index of log entry immediately precedingnew ones",4,null],[12,"prev_log_term","","term of prevLogIndex entry",4,null],[12,"entries","","log entries to store (empty for heartbeat;may send more…",4,null],[12,"leader_commit","","leader’s commitIndex",4,null],[3,"AppendEntriesResponse","","",null,null],[12,"term","","currentTerm, for leader to update itself",5,null],[12,"success","","true if follower contained entry matchingprevLogIndex and…",5,null],[3,"RequestVoteRequest","","Invoked by candidates to gather votes (§5.2).",null,null],[3,"RequestVoteResponse","","",null,null],[6,"ServerId","raft","",null,null],[6,"Term","","Time is divided into terms, and each term beginswith an…",null,null],[11,"from","raft::log","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","raft::state","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","raft::rpc","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"default","raft::state","",6,[[],["persistentstate"]]],[11,"default","","",2,[[],["self"]]],[11,"default","","",3,[[],["serverstate"]]],[11,"eq","","",7,[[["leaderstate"],["self"]],["bool"]]],[11,"ne","","",7,[[["leaderstate"],["self"]],["bool"]]],[11,"eq","","",2,[[["states"],["self"]],["bool"]]],[11,"ne","","",2,[[["states"],["self"]],["bool"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"serialize","raft::rpc","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","","",8,[[["self"],["__s"]],["result"]]],[11,"serialize","","",9,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"deserialize","","",5,[[["__d"]],["result"]]],[11,"deserialize","","",8,[[["__d"]],["result"]]],[11,"deserialize","","",9,[[["__d"]],["result"]]]],"p":[[3,"LogItem"],[8,"Log"],[4,"States"],[3,"ServerState"],[3,"AppendEntriesRequest"],[3,"AppendEntriesResponse"],[3,"PersistentState"],[3,"LeaderState"],[3,"RequestVoteRequest"],[3,"RequestVoteResponse"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);